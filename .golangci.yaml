version: "2"

formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: strict

linters:
  enable:
    - asciicheck
    - bodyclose
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - dupword
    - err113
    - errcheck
    - errchkjson
    - errorlint
    - exhaustive
    - exptostd
    - fatcontext
    - forbidigo
    - funlen
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goprintffuncname
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - iface
    - importas
    - inamedparam
    - ineffassign
    - intrange
    - lll
    - loggercheck
    - makezero
    - mirror
    - misspell
    - nakedret
    - nestif
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - recvcheck
    - revive
    - rowserrcheck
    - spancheck
    - staticcheck
    - tagalign
    - tagliatelle
    - thelper
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - varnamelen
    - whitespace
    - wrapcheck

  settings:
    funlen:
      lines: 200
      statements: 50
      ignore-comments: true
    govet:
      enable-all: true
      disable:
        - fieldalignment
      settings:
        shadow:
          strict: true
    tagliatelle:
      case:
        rules:
          json: goCamel
    godot:
      #   declarations - for top level declaration comments (default);
      #   toplevel     - for top level comments;
      #   all          - for all comments.
      scope: toplevel
      exclude:
        - '^ \+.*'
        - '^\+.*'
        - "^ ANCHOR.*"
    loggercheck:
      require-string-key: true
    importas:
      no-unaliased: true
      no-extra-aliases: true
      alias:
        # Kubernetes
        - pkg: k8s.io/api/core/v1
          alias: corev1
        - pkg: k8s.io/api/apps/v1
          alias: appsv1
        - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
          alias: apiextensionsv1
        - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
          alias: metav1
        - pkg: k8s.io/apimachinery/pkg/api/errors
          alias: apierrors
        - pkg: k8s.io/apimachinery/pkg/util/errors
          alias: kerrors
        - pkg: k8s.io/client-go/applyconfigurations/apps/v1
          alias: appsv1ac
        - pkg: k8s.io/client-go/applyconfigurations/meta/v1
          alias: metav1ac
        - pkg: k8s.io/client-go/applyconfigurations/core/v1
          alias: corev1ac
        - pkg: k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta4
          alias: kubeadmv1beta4
        - pkg: k8s.io/kubernetes/cmd/kubeadm/app/constants
          alias: konstants
        - pkg: k8s.io/kubernetes/cmd/kubeadm/app/cmd/options
          alias: kommandconstants
        - pkg: k8s.io/api/rbac/v1
          alias: rbacv1
        - pkg: k8s.io/client-go/applyconfigurations/rbac/v1
          alias: rbacv1ac
        - pkg: k8s.io/cluster-bootstrap/token/api
          alias: bootstrapapi
        - pkg: k8s.io/kubernetes/pkg/kubelet/apis/config/v1beta1
          alias: kubeletv1beta1
        - pkg: k8s.io/kubelet/config/v1beta1
          alias: kubelettypes
        - pkg: k8s.io/kubernetes/cmd/kube-controller-manager/names
          alias: kubenames
        - pkg: k8s.io/client-go/tools/clientcmd/api/v1
          alias: kubeconfigv1
        - pkg: k8s.io/component-base/config/v1alpha1
          alias: componentbaseconfigalpha1
        - pkg: k8s.io/kube-proxy/config/v1alpha1
          alias: kubeproxyv1alpha1
        - pkg: k8s.io/kubernetes/cmd/kubeadm/app/util
          alias: kubeadmutil

        # Gateway API
        - pkg: sigs.k8s.io/gateway-api/apis/v1
          alias: gwv1
        - pkg: sigs.k8s.io/gateway-api/apis/v1alpha2
          alias: gwv1alpha2
        - pkg: sigs.k8s.io/gateway-api/applyconfiguration/apis/v1
          alias: gwv1ac
        - pkg: sigs.k8s.io/gateway-api/pkg/client/clientset/versioned
          alias: gwclient

        # Controller Runtime
        - pkg: sigs.k8s.io/controller-runtime
          alias: ctrl

        # CAPI
        - pkg: sigs.k8s.io/cluster-api/api/v1beta1
          alias: capiv1
        - pkg: sigs.k8s.io/cluster-api/exp/addons/api/v1beta
          alias: addonsv1
        - pkg: sigs.k8s.io/cluster-api/util/secret
          alias: capisecretutil

        # Cert Manager
        - pkg: github.com/cert-manager/cert-manager/pkg/apis/certmanager/v1
          alias: certmanagerv1
        - pkg: github.com/cert-manager/cert-manager/pkg/apis/meta/v1
          alias: certmanagermetav1
        - pkg: github.com/cert-manager/cert-manager/pkg/client/applyconfigurations/certmanager/v1
          alias: certmanagerv1ac
        - pkg: github.com/cert-manager/cert-manager/pkg/client/applyconfigurations/meta/v1
          alias: certmanagermetav1ac
        - pkg: github.com/cert-manager/cert-manager/pkg/client/clientset/versioned
          alias: cmclient

        # Third Party Libraries
        - pkg: github.com/samber/lo
          alias: slices
        - pkg: github.com/blang/semver/v4
          alias: semver
        - pkg: github.com/caarlos0/env/v6
          alias: env

        # OpenTelemetry
        - pkg: go.opentelemetry.io/otel/semconv/v1.34.0
          alias: semconv

        # hcp
        - pkg: github.com/teutonet/cluster-api-control-plane-provider-hcp/pkg/util/errors
          alias: errorsUtil
        - pkg: github.com/teutonet/cluster-api-control-plane-provider-hcp/pkg/operator/util/controller
          alias: controllerUtil
        - pkg: github.com/teutonet/cluster-api-control-plane-provider-hcp/pkg/operator/util
          alias: operatorutil

    nolintlint:
      allow-unused: false
      require-specific: true
    forbidigo:
      analyze-types: true
      forbid:
        - pattern: ^(fmt\.Print(|f|ln)|print|println)$
          msg: use log package instead
          # stupid go
          # original regex: sigs.k8s.io/cluster-api-provider-openstack/api/(?!v1beta1)
        - pkg: sigs.k8s.io/cluster-api-provider-openstack/api/([^v]|v[^1]|v1[^b]|v1b[^e]|v1be[^t]|v1bet[^a]|v1beta[^1])
          msg: use v1beta1 package instead
        - pkg: github.com/gophercloud/(gophercloud|utils)/([^v]|v[^2])
          msg: use v2 package instead
        #        - pattern: ^controllerutil\.CreateOrPatch$
        #          msg: use SSA instead
        # original regex: slog\.Logger\.(Info|Error|Debug|Warn)(?!Context)
        - pattern: ^slog\.Logger\.(Info|Error|Debug|Warn)(|[^C]|C[^o]|Co[^n]|Con[^t]|Cont[^e]|Conte[^x]|Contex[^t])$
          msg: Use the Context version
        # - pattern: ^controllerruntime.LoggerFrom$
        #   msg: Use 'logr.FromContextAsSlogLogger(ctx)' instead
        # - pattern: ^logr.Logger
        #   msg: Use slog instead
    revive:
      rules:
        - name: exported
          disabled: true
    gosec:
      excludes:
        - G307 # Deferring unsafe method "Close" on type "\*os.File"
        - G108 # Profiling endpoint is automatically exposed on /debug/pprof
        - G601 # not needed in 1.22, see https://github.com/securego/gosec/issues/1099#issuecomment-1938285468
    gocritic:
      enabled-tags:
        - experimental
      disabled-checks:
        #- dupImport # https://github.com/go-critic/go-critic/issues/845
        - evalOrder
        - octalLiteral
        - unnamedResult
    perfsprint:
      strconcat: false
    wrapcheck:
      ignore-sig-regexps:
        - func github.com/teutonet/cluster-api-control-plane-provider-hcp/pkg/util/tracing\.WithSpan[0-9]*
      extra-ignore-sigs:
        - func github.com/teutonet/cluster-api-control-plane-provider-hcp/pkg/util/errors.IfErrErrorf
  exclusions:
    generated: strict
    rules:
      - linters:
          - lll
        source: "^//\\+kubebuilder.*"
      - linters:
          - lll
        source: ".*https.*" # URLs are long ðŸ¤·
      - linters:
          - importas
        text: 'has alias "" which is not' # Why the fuck aren't empty aliases allowed?!
      - linters:
          - importas
        text: 'import ".*/v[0-9]+" imported without alias but must be with alias ".*" according to config' # stupid go...
      - linters:
          - govet
        text: 'shadow: declaration of "(err|ctx)" shadows declaration at'
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      # Exclude some packages or code to require comments, for example test code, or fake clients.
      - linters:
          - godot
          - revive
        path: "e2e/.*.go"
      # Disable unparam "always receives" which might not be really
      # useful when building libraries.
      - linters:
          - unparam
        text: always receives
      # Dot imports for gomega or ginkgo are allowed
      # within test files.
      - text: should not use dot imports
        path: _test\.go
      - text: should not use dot imports
        path: e2e/.*.go
      - text: cyclomatic complexity
        path: _test\.go
      - linters:
          - err113
          - varnamelen
        path: _test\.go
      # Append should be able to assign to a different var/slice.
      #- linters:
      #    - gocritic
      #  text: "appendAssign: append result not assigned to the same slice"
      # We don't care about defer in for loops in test files.
      - linters:
          - gocritic
        text: "deferInLoop: Possible resource leak, 'defer' is called in the 'for' loop"
        path: _test\.go
      # These two are very similar but so intricate, that it's hard to deduplicate them.
      # At the same time, they're quite short and easy to understand.
      - linters:
          - dupl
        text: 1-44 lines are duplicate of `pkg/cloud/user/storage.go:1-43
        path: pkg/cloud/user/loadBalancer.go
      - linters:
          - dupl
        text: 1-43 lines are duplicate of `pkg/cloud/user/loadBalancer.go:1-44
        path: pkg/cloud/user/storage.go

run:
  timeout: 10m
  build-tags:
    - tools
    - e2e
  allow-parallel-runners: true

issues:
  max-same-issues: 0
  max-issues-per-linter: 0

output:
  formats:
    code-climate:
      path: _artifacts/golangci-lint.json
    text:
      path: stdout
  sort-order:
    - file
    - severity
    - linter
